#!/bin/bash

#!/bin/bash

spacey() {
    case $1 in
        "")
            echo "
  ▀▄   ▄▀     /////////////////////////////////////////////////////////////////////////////////
 ▄█▀███▀█▄   // Hey, I'm spacey. I'm here to help! Just type 'spacey' followed by a number. //
█▀███████▀█ /////////////////////////////////////////////////////////////////////////////////
▀ ▀▄▄ ▄▄▀ ▀
              
1. Establishing an internet connection      5. Auto-connect to known wifi networks     9. Get sound working
2. Setting your locale                      6. Set password for 'root' user            10. Install X window system 
3. Setting your timezone and time           7. Add new user
4. Setting your machine's hostname          8. Edit sudoers file
            ";; 
        1) 
            echo "
  ▀▄   ▄▀     ////////////////////////////////////////////
 ▄█▀███▀█▄   // 1. Establishing an internet connection //
█▀███████▀█ ////////////////////////////////////////////
▀ ▀▄▄ ▄▄▀ ▀

1. To connect to a wifi netowrk, run:
    # wifi-menu
2. Select network.
3. Enter password.
4. Ping Google servers to test connection by running:
    # ping -c 3 www.google.com
            ";; 
        2) 
            echo "
  ▀▄   ▄▀     ////////////////////////////
 ▄█▀███▀█▄   // 2. Setting your locale //
█▀███████▀█ ////////////////////////////
▀ ▀▄▄ ▄▄▀ ▀

1. Open locale.gen by running
    # nano /etc/locale.gen
2. Uncomment the line that contains 'en_US.UTF-8 UTF-8' by deleting the '#' in front. Now you are ready to generate your locale.
3. To generate your locale, run:
    # locale-gen
4. Create locale.conf by running:
    # echo LANG=en_US.UTF-8 > /etc/locale.conf
5. Export your chosen locale by running:
    # export LANG=en_US.UTF-8
            ";;
        3)
            echo "
  ▀▄   ▄▀     ///////////////////////////////////////
 ▄█▀███▀█▄   // 3. Setting your timezone and time //
█▀███████▀█ ///////////////////////////////////////
▀ ▀▄▄ ▄▄▀ ▀

1. Navigate to /usr/share/zoneinfo/America if you are in America. If not, navigate to the correct zone.
2. Find the correct city (SubZone) for your timezone. Now you are ready to set your localtime.
3. To set your localtime, run: 
    # ln -s /usr/share/zoneinfo/America/SubZone /etc/localtime
4. To sync your clock to remote server, run: 
    # timedatectl set-ntp true
    a. If you prefer, you can also set your clock manually by running:
        # timedatectl set-time \"yyyy-MM-dd hh:mm:ss\"
            ";;
        4)
            echo "
  ▀▄   ▄▀     ////////////////////////////////////////
 ▄█▀███▀█▄   // 4. Setting your machine's hostname //
█▀███████▀█ ////////////////////////////////////////
▀ ▀▄▄ ▄▄▀ ▀
   
1. Set your machine's hostname to anything you like by running:
    # echo myhostname > /etc/hostname
2. Add the same hostname to /etc/hosts like so:
    #<ip-address> <hostname.domain.org> <hostname>
    127.0.0.1 localhost.localdomain localhost myhostname
    ::1   localhost.localdomain localhost myhostname 
            ";;

        5)
            echo "
  ▀▄   ▄▀     ////////////////////////////////////////////
 ▄█▀███▀█▄   // 5. Auto-connect to known wifi networks //
█▀███████▀█ ////////////////////////////////////////////
▀ ▀▄▄ ▄▄▀ ▀

1. Install 'wpa_actiond' by running:
    # pacman -S wpa_actiond
2. Enable the netctl-auto service by running:
    # systemctl enable netctl-auto@wlan0.service
            ";;
        6)
            echo "
  ▀▄   ▄▀     /////////////////////////////////////
 ▄█▀███▀█▄   // 6. Set password for 'root' user //
█▀███████▀█ /////////////////////////////////////
▀ ▀▄▄ ▄▄▀ ▀

1. To set a password for the 'root' user, run:
    # passwd
2. For the sake of demonstration, set you 'root' password to 'password'. Don't worry, we'll change it later.
            ";;
        7)
            echo "
  ▀▄   ▄▀     /////////////////////
 ▄█▀███▀█▄   // 7. Add new user //
█▀███████▀█ /////////////////////
▀ ▀▄▄ ▄▄▀ ▀

1. To add a new user, run:
    # useradd -m -G wheel -s /bin/bash archie
    b. The above command adds a user named 'archie' to the 'wheel' group. In addition, this command creates
       a home directory for archie and sets his shell as /bin/bash. 
            ";;

        8)
            echo "
  ▀▄   ▄▀     //////////////////////////
 ▄█▀███▀█▄   // 8. Edit sudoers file //
█▀███████▀█ //////////////////////////
▀ ▀▄▄ ▄▄▀ ▀

1. To edit the sudoers file, run:
    # visudo
2. Scroll down with 'j' until you see the following line:
    root ALL=(ALL) ALL
3. Add your username with the same syntax below this line using the 'i' key to insert.
4. When finished, hit the 'Esc' key and type 'ZZ' to save and exit.
            ";;
            
        9)
            echo "
  ▀▄   ▄▀     //////////////////////////
 ▄█▀███▀█▄   // 9. Get sound working //
█▀███████▀█ //////////////////////////
▀ ▀▄▄ ▄▄▀ ▀

1. To get sound working, first install the following four packages by running:
    $ sudo pacman -S alsa-utils alsa-firmware alsa-lib alsa-plugins
2. By default, all channels are muted. Unmute the PCM channel by running:
    $ amixer sset PCM unmute
3. Test that sound is working by running:
    $ speaker-test -c 2 
            ";;

        10)
            echo "
  ▀▄   ▄▀     /////////////////////////////////
 ▄█▀███▀█▄   // 10. Install X window system //
█▀███████▀█ /////////////////////////////////
▀ ▀▄▄ ▄▄▀ ▀

1. To install the X window system, run:
    $ sudo pacman -S xorg-server xorg-server-utils xorg-xinit
2. Install the X.org driver for Raspberry Pi by running:
    $ sudo pacman -S xf86-video-fbdev
3. Install some GUI programs by running:
    $ sudo pacman -S xorg-twm xorg-xclock xterm
4. In order for X to start, you need a configuration file. To get one, run:
    $ cp /etc/X11/xinit/xinitrc ~/.xinitrc
5. To test if this worked, run:
    $ startx
            ";;
    esac; 
}
